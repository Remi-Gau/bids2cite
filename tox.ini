[tox]
requires =
  tox>=4
skip_missing_interpreters = true

; run lint by default when just calling "tox"
env_list = lint

; ENVIRONMENTS
; ------------
[style]
description = common environment for style checkers (rely on pre-commit hooks)
skip_install = true
deps =
    pre-commit

# Configuration that allows us to split tests across GitHub runners effectively
[gh-actions]
python =
  3.8: py38
  3.9: py39
  3.10: py310
  3.11: py311
  3.12: py312

; COMMANDS
; --------
[testenv:lint]
description = run all linters and formatters
skip_install = true
deps =
    {[style]deps}
commands =
	pre-commit run --all-files --show-diff-on-failure {posargs:}

[testenv:test]
description = Pytest with coverage
labels = test
pass_env =
  # getpass.getuser() sources for Windows:
  LOGNAME
  USER
  LNAME
  USERNAME
  # Pass user color preferences through
  PY_COLORS
  FORCE_COLOR
  NO_COLOR
  CLICOLOR
  CLICOLOR_FORCE
extras = test

commands =
  coverage erase
  coverage run --source bids2cite -m pytest
  coverage xml

[testenv:docs]
description = Build documentation site
labels = docs
allowlist_externals = make
extras = doc
commands =
  make -C docs clean
  make -C docs html

[testenv:build{,-strict}]
labels =
  check
  pre-release
allowlist_externals = make
deps =
  build
  twine
skip_install = true
set_env =
  build-strict: PYTHONWARNINGS=error
commands =
  make clean-build
  python -m build
  python -m twine check dist/*

[testenv:publish]
depends = build
labels = release
deps =
  twine
skip_install = true
commands =
  python -m twine upload dist/*
