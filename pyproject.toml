[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project]
authors = [{name = "Rémi Gau"}]
classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved",
    "Programming Language :: Python",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13"
]
dependencies = [
    "cffconvert",
    "crossref-commons",
    "pandas",
    "requests",
    "rich",
    "ruamel.yaml",
    "rich_argparse"
]
description = "Create a citation file for a BIDS dataset."
dynamic = ["version"]
license = {text = "LGPL-3.0"}
maintainers = [{name = "Rémi Gau", email = "remi.gau@gmail.com"}]
name = "bids2cite"
readme = "README.md"
requires-python = ">=3.9"

[project.optional-dependencies]
dev = [
    "bids2cite[doc,test]",
    "sourcery"
]
doc = [
    "myst-parser",
    "rstcheck",
    "sphinx>7",
    "sphinx-argparse",
    "sphinx-copybutton",
    "sphinx-rtd-theme"
]
docs = ["bids2cite[doc]"]
test = ["pytest>=7", "pytest-cov", "coverage"]
tests = ["bids2cite[test]"]

[project.scripts]
bids2cite = "bids2cite.bids2cite:_cli"

[project.urls]
Homepage = "https://github.com/Remi-Gau/bids2cite"

[tool.codespell]
builtin = "clear,rare"
skip = "*.svg,*.eps,.git,env,*build,.mypy*"

[tool.hatch.build.hooks.vcs]
version-file = "bids2cite/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["bids2cite"]

[tool.hatch.version]
source = "vcs"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
no_implicit_optional = true
strict = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "ruamel.*",
    "cffconvert.*",
    "rich.*",
    "crossref_commons.*",
    "rich_argparse.*",
    'bids2cite._version'
]

[[tool.mypy.overrides]]
ignore_errors = true
module = [
    'tests.*',
    'docs.*',
    'bids2cite._version'
]

[tool.pytest.ini_options]
addopts = "-ra -q -vv --cov bids2cite --strict-config --strict-markers"
filterwarnings = ["error"]
log_cli_level = "INFO"
minversion = "7"
norecursedirs = "data"
testpaths = ["tests/"]
xfail_strict = true

[tool.ruff]
extend-exclude = []
include = ["pyproject.toml", "bids2cite/**/*.py", "test/**/*.py"]
indent-width = 4
line-length = 90

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["ALL"]
ignore = [
    "PLR0913",
    "PLR0915"
]
# List of all the ruff rules (includes why the rule matters)
# https://docs.astral.sh/ruff/rules/
select = [
    "ARG",
    "B",
    "C4",
    "C90",
    "D",
    "DOC",
    "E",
    "ERA",
    "F",
    "FLY",
    "I",
    "N",
    "NPY",
    "PERF",
    "PTH",
    "PD",
    "PLR",
    "RUF",
    "SIM",
    "UP",
    "W"
]
unfixable = []

[tool.ruff.lint.mccabe]
max-complexity = 41

[tool.ruff.lint.per-file-ignores]
"**/{tests}/*" = ["D100", "D103", "D104", "PLR0913"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
